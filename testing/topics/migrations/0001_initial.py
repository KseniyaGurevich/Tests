# Generated by Django 3.2.16 on 2022-12-12 07:58

from django.db import migrations, models
import django.db.models.deletion


class Migration(migrations.Migration):

    initial = True

    dependencies = [
    ]

    operations = [
        migrations.CreateModel(
            name='Answer',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=150, verbose_name='Вариант ответа')),
            ],
            options={
                'verbose_name_plural': 'Ответы',
            },
        ),
        migrations.CreateModel(
            name='Group',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('title', models.CharField(max_length=50, verbose_name='Название группы тестов')),
                ('description', models.CharField(max_length=50, verbose_name='Описание группы')),
                ('slug', models.SlugField(unique=True, verbose_name='URL-ярлык')),
            ],
            options={
                'verbose_name': 'Набор тестов',
                'verbose_name_plural': 'Наборы тестов',
            },
        ),
        migrations.CreateModel(
            name='Question',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.TextField(verbose_name='Вопрос')),
            ],
            options={
                'verbose_name_plural': 'Вопросы',
            },
        ),
        migrations.CreateModel(
            name='Test',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=200, verbose_name='Название теста')),
                ('group', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='tests_in_group', to='topics.group')),
                ('questions', models.ManyToManyField(to='topics.Question')),
            ],
            options={
                'verbose_name': 'Тест',
                'verbose_name_plural': 'Тесты',
            },
        ),
        migrations.CreateModel(
            name='TestQuestion',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('question', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, to='topics.question')),
                ('test', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, to='topics.test')),
            ],
            options={
                'verbose_name': 'Тест-вопрос',
                'verbose_name_plural': 'Тесты-вопросы',
            },
        ),
        migrations.CreateModel(
            name='QuestionAnswer',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('check', models.BooleanField(default=False, verbose_name='Правильный ответ')),
                ('answer', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='answer', to='topics.answer')),
                ('question', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='question', to='topics.question')),
                ('test', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='test', to='topics.test')),
            ],
            options={
                'verbose_name_plural': 'Создать тест (вопросы и ответы)',
            },
        ),
        migrations.AddField(
            model_name='question',
            name='answer',
            field=models.ManyToManyField(related_name='answer1', through='topics.QuestionAnswer', to='topics.Answer'),
        ),
    ]
